version: '3'

networks:
  de-toolkit-net:
    name: ${DOCKER_NETWORK:-de-toolkit-net}

x-toolkit-common: &toolkit-common
  networks:
    - ${DOCKER_NETWORK:-de-toolkit-net}  

services:
  jupyter:
    image: jupyter/pyspark-notebook:${JUPYTER_VERSION:-latest}
    user: root
    volumes:
      - "./jupyter/jupyter_server_config.py:/home/${DE_USERNAME:-de_user}/.jupyter/jupyter_server_config.py:r"
      - "./jupyter/notebooks:/home/${DE_USERNAME:-de_user}/work:rw"
      - "./data:/home/${DE_USERNAME:-de_user}/work/data:r"
    ports:
      - '8888:8888'
    <<: *toolkit-common
    working_dir: /home/${DE_USERNAME:-de_user}
    environment:
      - NB_USER=${DE_USERNAME:-de_user}
      - CHOWN_HOME=yes
  mongodb:  
    image: mongo:latest
    volumes:
      - ./mongodb/data:/bitnami/mongodb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      # - MONGODB_EXTRA_FLAGS=--wiredTigerCacheSizeGB=2
      # - MONGODB_ENABLE_JOURNAL=true
      # - MONGODB_ROOT_PASSWORD=${DE_PASSWORD:-de_pass}
      # - MONGODB_USERNAME=${DE_USER:-de_user}
      # - MONGODB_PASSWORD=${DE_USER:-de_pass}
      # - MONGODB_DATABASE=${DE_DB_NAME:-de}
      # - MONGODB_PORT_NUMBER=27017
    ports:
      - 27017:27017
    <<: *toolkit-common
  postgresql:
    image: 'bitnami/postgresql:${PG_VERSION:-latest}'
    hostname: postgresql
    ports:
      - '5432:5432'
    <<: *toolkit-common
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${DE_DB_NAME:-de} -U $${DE_USERNAME:-de_user} || exit 1
      timeout: 2s
    volumes:
      - "./postgresql/data:/bitnami/postgresql"
#      - "./airflow/1_create_de_user_d.sql:/docker-entrypoint-initdb.d/1_create_de_user_db.sql"
#      - "./airflow/create_airflow_db.sql:/docker-entrypoint-initdb.d/create_airflow_db.sql"
      - "./metabase/create_metabase_db.sql:/docker-entrypoint-initdb.d/create_metabase_db.sql"
    environment:
      - POSTGRESQL_DATABASE=${DE_DB_NAME:-de}
      - POSTGRESQL_USERNAME=${DE_USERNAME:-de_user}
      - POSTGRESQL_PASSWORD=${DE_PASSWORD:-de_pass}
# metabase
  metabase:
    image: metabase/metabase:${METABASE_VERSION:-latest}
    container_name: metabase
    depends_on:
      - postgresql
    hostname: metabase
    ports:
      - "3000:3000"
    <<: *toolkit-common
    volumes:
      - "./metabase/plugins:/plugins"
      - "./metabase/data:/metabase-data"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=${DE_USERNAME:-de_user}
      - MB_DB_PASS=${DE_PASSWORD:-de_pass}
      - MB_DB_HOST=postgresql
