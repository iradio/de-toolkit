version: '3'

services:
# cronicle
  cronicle:
    image: bluet/cronicle-docker:latest
    container_name: cronicle
    hostname: cronicle
    ports:
      - "8080:3012" 
    restart: unless-stopped
    volumes:
      - "./cronicle/data/:/opt/cronicle/data:rw"
      - "./cronicle/logs:/opt/cronicle/logs:rw"
      - "./cronicle/plugins:/opt/cronicle/plugins:rw"
      - "./cronicle/app:/app:rw"
    environment:
      - CRONICLE_WebServer__http_port=3012
      - CRONICLE_server_comm_use_hostnames=1
# postgresql
  postgresql:
    image: 'bitnami/postgresql:latest'
    container_name: postgresql
    hostname: postgresql
    ports:
      - '5432:5432'
    volumes:
      - "./postgresql/data:/bitnami/postgresql"
      - "./metabase/create_metabase_db.sql:/docker-entrypoint-initdb.d/create_metabase_db.sql"
    environment:
      - POSTGRESQL_DATABASE=${DE_DB_NAME:-de}
      - POSTGRESQL_USERNAME=${DE_USERNAME:-de_user}
      - POSTGRESQL_PASSWORD=${DE_PASSWORD:-de_pass}
# metabase
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    depends_on:
      - postgresql
    hostname: metabase
    ports:
      - "3000:3000"
    volumes:
      - "./metabase/plugins:/plugins"
      - "./metabase/data:/metabase-data"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=${DE_USERNAME:-de_user}
      - MB_DB_PASS=${DE_PASSWORD:-de_pass}
      - MB_DB_HOST=postgresql